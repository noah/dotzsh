function mandelbrot {
   local lines columns colour a b p q i pnew
   ((columns=COLUMNS-1, lines=LINES-1, colour=0))
   for ((b=-1.5; b<=1.5; b+=3.0/lines)) do
       for ((a=-2.0; a<=1; a+=3.0/columns)) do
           for ((p=0.0, q=0.0, i=0; p*p+q*q < 4 && i < 32; i++)) do
               ((pnew=p*p-q*q+a, q=2*p*q+b, p=pnew))
           done
           ((colour=(i/4)%8))
            echo -n "\\e[4${colour}m "
        done
        echo
    done
}

function figlets {
  if [[ "$1" != "" ]]; then
    for x in $(locate \*.flf); do 
      figlet -f `basename $x .flf` "$1"
    done | less # yeah, this probably won't work in bash <-
  else
    echo "Usage: ./figlets <string>"
    return 1
  fi
}

expand-or-complete-with-dots() {
  echo -n "\e[31m......\e[0m"
  zle expand-or-complete
  zle redisplay
}
zle -N expand-or-complete-with-dots
bindkey "^I" expand-or-complete-with-dots


git_diff (){
    git diff --no-ext-diff $@
}

pf(){
  print_queue=~/print_queue
  if [[ $argv[1] == "" ]]; then
    echo "Usage:  $0 <files>"
    return -1
  fi
  cp -v $@ $print_queue
}

# pmv:
#       pattern match mv(1)
#
#       move files matching /pattern/ to <destination>
#       pmv /pattern/ <destination>
#
#       create destination if doesn't exist
pmv()
{
  if [ $# -ne 2 ]; then
    echo "Usage: $0 /pattern/ <destination>"; return -1
  fi
  [ -d "$2" ] || mkdir -vp "$2"
  ls -A | grep -i "$1" | while read line; do mv -v "$line" "$2"; done;
}

# prm:
#      pattern rm(1)
#
#       remove files matching /pattern/
#       prm /pattern/
#
prm()
{
  if [ $# -ne 1 ]; then
    echo "Usage: $0 /pattern/"; return -1
  fi
  targets=$(ls -A | grep -i "$1")
  echo "Removing '$1' recursively:"; echo
  echo $targets
  for second in {3..0}; do
    echo -n " $second"
    sleep 0.5
  done
  echo; echo $targets | while read line; do rm -rfv "$line"; done;
}

grepvim()
{
  if [ $# -ne 1 ]; then
    echo "Usage: $0 /pattern/"; return -1
  fi
  grep -s -l -r "$1" * | while read line; do 
    vim "$line" < /dev/pts/0 > /dev/pts/0
  done;
}

# vim: ft=zsh
