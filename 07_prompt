# Git state in prompt
#
function git-need-to-push() {
  if pushtime=$(echo $(git status 2> /dev/null) | grep 'Your branch is ahead' 2> /dev/null); then
    echo "↑ " # ^K !-
  fi
}

setopt prompt_subst
autoload -Uz vcs_info
zstyle ':vcs_info:*' enable git
zstyle ':vcs_info:*' check-for-changes true

# unstaged changes to repo
zstyle ':vcs_info:*' unstagedstr '%F{red}✗'

# staged (committed) changes to repo
zstyle ':vcs_info:*' stagedstr '%F{yellow}+'

zstyle ':vcs_info:*' actionformats \
  '%F{blue}%s%F{yellow}-%F{green}%b%F{yellow}..%F{red}%a%f '
#zstyle ':vcs_info:*' formats       \
#    '%F{5}(%f%s%F{5})%F{3}-%F{5}[%F{2}%b%F{5}]%f '
zstyle ':vcs_info:(sv[nk]|bzr):*' branchformat '%b%F{1}:%F{3}%r'

function precmd() {
    print -Pn "\e]2;%n@%m:%~ (%j)\a"
}

# precmd () {
#     gls=$(git ls-files --other --exclude-standard)
#     if [[ -z "$gls" ]] {
#         # repo is clean
#         myfmt=("✓" "%F{cyan}$(git-need-to-push)")
#         zstyle ':vcs_info:*' formats "%u%c%F{blue} %s%F{yellow}-%F{green}%b%f"
#     } else {
#         # print ${(j.**.)foo}
#         # new untracked (un git-add'ed) file
#         myfmt=("%F{magenta}¿" "%u" "%c" "%F{cyan}$(git-need-to-push)")
#         zstyle ':vcs_info:*' formats "${(j. .)myfmt}%F{blue} %s%F{yellow}-%F{green}%b%f" 
#     }
#     vcs_info
# }
 
PR_RESET="%{$reset_color%}"
SEP="  "


# ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~ ~~~~
# A custom prompt:
#
# !4386  +0  *noah  @7be  .20100313 16:24:44 CST  ?0
# %/# 
#
# The value prefixes are semi-mnemonic.  E.g.,
#   !n runs the command with history number n
#   + is displayed in output of jobs command e.g., 
#       $ jobs
#       [1]  + suspended  vim
#   * of course, the logged-in user is represented by a star
#   @ at hostname 
#   . dot for where we are right now (in terms of time)
#   $? for exit status of last job (as in $?)
#   # for the size of the current font in pixels
#
# history num
# num jobs
# user
# host
# timestamp
# exit status of last command
#
# %F{color} gets color %f is escape

function fstype
{
  echo -n "%{%{%F{201}%}%}$(stat -f -L -c %T .)%f"
}

function pixels
{
  # null op if we're logged in over ssh
  if [ -z "$SSH_CLIENT" ] && [ -z "$SSH_TTY" ]; then
    echo -n "$(grep urxvt.font ~/.config/xresources/fonts | sed -r -e 's/.*pixelsize=([[:digit:]]+).*/\1/' | tail -n 1)"px
  fi
}

local histno="%{%{$fg[green]%}%}%!%{$reset_color%}"
local jobnos="%{%{$fg[magenta]%}%}%j%{$reset_color%}"
local usernm="%{%{$fg[blue]%}%}%n%{$reset_color%}"
local hostnm="%{%{$fg[yellow]%}%}%m%{$reset_color%}"
#local timenm="%{%{$fg[cyan]%}%}%D{%Y%m%d %T %Z}%{$reset_color%}"
local jobret="%{%{$fg[red]%}%}%?%{$reset_color%}"
local pixels="%{%{$fg[gray]%}%}%?%{$reset_color%}"
local thetty="%F{202}%y%f"

# See: zshmisc(1)

PROMPT='\
!%B${histno}%b$SEP\
+%B${jobnos}%b$SEP\
*%B${usernm}%b$SEP\
@%B${hostnm}%b$SEP\
?%B${jobret}%b$SEP\
%B${$(pixels)}%b$SEP\
%B${${thetty}}%b$SEP\
%B${$(fstype)}%b$SEP
%{${$(pwd|grep --color=always /)}%}
%(!.#.%%) '

RPROMPT='%B${vcs_info_msg_0_}%b'

# vim: ft=zsh
